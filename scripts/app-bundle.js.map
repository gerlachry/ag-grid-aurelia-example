{"version":3,"sources":["app.js","environment.js","main.js","search.js","web-api.js","resources/index.js"],"names":["App","configureRouter","config","router","title","map","route","moduleId","name","debug","testing","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","plugin","feature","developmentLogging","start","then","setRoot","Search","api","gridOptions","rowData","getRowData","columnDefs","getColumnDefs","attached","console","log","getContactList","contacts","headerName","field","onGridReady","latency","id","getId","firstName","lastName","email","phoneNumber","WebAPI","isRequesting","setTimeout","results","x","resolve","getContactDetails","found","filter","JSON","parse","stringify","saveContact","contact","instance","index","indexOf","push"],"mappings":"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","file":"app-bundle.js","sourcesContent":["    \nexport class App {\n  configureRouter(config, router){\n    config.title = 'Search Grid Test';\n    config.map([\n      { route: '',  moduleId: 'search', name:'search' }\n    ]);\n\n    this.router = router;\n  }\n}\n\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('ag-grid-aurelia')\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","\n\"use strict\";\nimport {inject} from \"aurelia-framework\";\n\nimport {GridOptions} from \"ag-grid\";\nimport {WebAPI} from './web-api';\n\n@inject(WebAPI)\nexport class Search {\n  //static inject = [WebAPI, GridOptions];\n  api;\n\n  constructor(api) {\n    this.api = api;\n    this.gridOptions = {};\n    this.rowData = [];\n    this.getRowData();\n    this.gridOptions.columnDefs = [];\n    this.getColumnDefs();\n  }\n\n  attached() {\n    console.log('attached:');\n    //this.initGrid();\n    //this.getColumnDefs();\n    //this.getRowData();\n  }\n\n  getRowData() {\n    console.log('calling data');\n    this.api.getContactList().then(contacts => {\n      this.rowData = contacts;\n      console.log('rowData from getRowData');\n      console.log(this.rowData);\n      console.log('finished calling web-api');\n    } );\n  }\n\n  getColumnDefs() {\n    this.gridOptions.columnDefs = [\n      {\n        headerName: \"id\",\n        field:\"id\"\n      },\n      {\n        headerName: \"First Name\",\n        field: \"firstName\"\n      },\n     {\n        headerName: \"Last Name\",\n        field: \"lastName\"\n      },\n      {\n        headerName: \"Email\",\n        field: \"email\"\n      }\n    ];\n  }\n\n  onGridReady() {\n    console.log('grid is ready');\n    console.log('gridOptions');\n    console.log(this.gridOptions);\n  }\n\n}","let latency = 200;\nlet id = 0;\n\nfunction getId(){\n  return ++id;\n}\n\nlet contacts = [\n  {\n    id:getId(),\n    firstName:'John',\n    lastName:'Tolkien',\n    email:'tolkien@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Clive',\n    lastName:'Lewis',\n    email:'lewis@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Owen',\n    lastName:'Barfield',\n    email:'barfield@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Charles',\n    lastName:'Williams',\n    email:'williams@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Roger',\n    lastName:'Green',\n    email:'green@inklings.com',\n    phoneNumber:'867-5309'\n  }\n];\n\nexport class WebAPI {\n  isRequesting = false;\n  \n  getContactList(){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = contacts.map(x =>  { return {\n          id:x.id,\n          firstName:x.firstName,\n          lastName:x.lastName,\n          email:x.email\n        }});\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getContactDetails(id){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let found = contacts.filter(x => x.id == id)[0];\n        resolve(JSON.parse(JSON.stringify(found)));\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  saveContact(contact){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let instance = JSON.parse(JSON.stringify(contact));\n        let found = contacts.filter(x => x.id == contact.id)[0];\n\n        if(found){\n          let index = contacts.indexOf(found);\n          contacts[index] = instance;\n        }else{\n          instance.id = getId();\n          contacts.push(instance);\n        }\n\n        this.isRequesting = false;\n        resolve(instance);\n      }, latency);\n    });\n  }\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}